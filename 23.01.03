23.01.03

this
객체 외부에서 인스턴스 멤버에 접근하기 위해 참조 변수를 사용하는 것과 같이 객체 내부에서도 인스턴스 멤버에 접근하기 위해 this를 사용

정적멤버와 static
정적은 고정된 이란 의미이다 정적멤버는 클래스에 고정된 멤버로서 객체를 생성하지 않고 사용할 수 있는 필드와 메소드를 말한다.
이들을 정적필드, 정적메소드라 한다.

정적 메소드 선언 시 주의할 사항
객체가 없어도 실행된다는 특징 때문에 정적 메소드를 선언할 때는 이들 내부에 인스턴스 필드나 인스턴스 메소드를 사용할 수 없다. 또한 객체
자신의 참조인 this 키워드도 사용이 불가하다.
정적메소드에서 인스턴스 멤버를 사용하고 싶다면 객체를 먼저 생성하고 참조 변수로 접근해야 한다.

싱글톤
전체 프로그램에서 단 하나의 객체만 만들도록 보장해야하는 경우가 있는데 단 하나만 생성된다고 해서 이 객체를 싱글톤이라 한다.
싱들톤을 만드려면 외부에 new연산자로 생성자를 호출 할 수 없도록 막아야한다. 생성자를 호출한 만큼 객체가 생성되기 때문에 생성자를 외부에서
호출할 수 없도록 하려면 생성자 앞에 private접근 제한자를 붙여주어 접근을 제한한다.
외부에서 객체를 얻는 방법은 getInstance()메소드를 호출하는 방법이다 getInstance()는 단 하나의 객체만 리턴하기 때문이다.

final필드
final은 최종적 이란 뜻으로서 final필드는 초기값이 저장되면 이것이 최종적인 값이 되어서 프로그램 실행 도중에 수정할 수 없다는 것이다
final필드의 초기값을 주는 방법은 필드 선언시 주는방법, 생성자에서 주는 방법 두가지 방법이 있다.
ex> final String nation = "korea"


상수
불변의 값을 상수(static final)라고 부른다. 불변의 값의 예시는 원주율 파이나 지구의 무게 및 둘레 등이 해당된다.
이런 불변의 값을 저장하는 필드를 자바에서는 상수constant라 한다.
static final 필드는 객체마다 존재하지 않고 클래스에만 존재한다, 그리고 한 번 초기값이 저장되면 변경할 수 없다.
ex> static final double pi = 3.14159;



final과 static final 의 차이점 알아보자
final 필드는 한 번 초기화되면 수정할 수 없는 필드이며 static final도 마찬가지다 하지만 static final은 불변의 값이며 final 값은
여러가지 값으로 초기화 할 수 있다는 차이점이 존재한다. final필드는 객체마다 저장되고 생성자의 매개값을 통해서 여러가지 값을 가질 수
있지만 static final필드는 객체마다 존재하지 않고 클래스에만 존재한다는 차이점이 있다.









