JAVA 230105 study

입출력 스트림
데이터를 읽고 출력하기 위해 사용되는 입출력 API
프로그램이 출발지냐 또는 도착지냐에 따라서 사용하는 스트림의 종류가 결정된다. 프로그램이 도착지이면 흘러온 데이터를 입력받아야 하므로 입력 스트림을 사용하며 반대로 프로그램이 출발지
면 데이터를 출력해야 하므로 출력 스트릠을 사용한다.

입출력 스트림의 종류로는 바이트 기반 스트림, 문자 기반 스트림으로 나뉜다
바이트 기반 스트림 : 그림, 멀티미디어 등의 바이너리 데이터를 읽고 출력할 때 사용
문자 기반 스트림 : 문자 데이터를 읽고 출력할 때 사용
InputStream OutputStream은 바이트 기반 입출력 스트림의 최상위 클래스이다.
Reader와 Writer는 문자 기반 입출력 스트림의 최상위 클래스이다 


OutputStream 주요 메소드
write(int b) 1byte를 출력한다
write(byte[] b) 매개값으로 주어진 배열b의 모든 바이트 출력
write(byte[] b, int off, int len) 
flush()
close()




스레드 다시 공부

애플리케이션을 실행하면 운영체제로부터 실행에 필요한 메모리를 할당받아 애플리케이션이 실행되는데 이것을 프로세스라 한다 
그리고 프로세스 내부에서 코드의 실행 흐름을 스레드라 한다 애플리케이션 개발에 필수 요소인 스레드에 대해 살펴본다.


프로세스
실행중인 하나의 애플리케이션
에플리케이션이 실행되면 운영체제로부터 실행에 필요한 메모리 할당받아 코드를 실행함
멀티 프로세스 역시 가능함

스레드
한 가지 작업을 실행하기 위해 순차적으로 실행한 코드를 이어놓은 것
하나의 스레드는 하나의 코드실행

멀티 스레드
하나의 프로세스로 두 가지 이상의 작업을 처리
데이터 분할하여 병렬로 처리하거나 다수 클라이언트 요청 처리하는 서버 개발하는 등의 용도
한 스레드가 예외 발생시킬 경우 프로세스 자체가 종료될 수 있음

메인 스레드
모든 자바 애플리케이션은 메인 스레드가 main()메소드 실행하면서 시작됨
main() 메소드의 첫 코드부터 아래로 순차적으로 실행
필요에 따라 작업 스레드들 만들어 병렬로 코드 실행 가능
멀티 스레드 애플리케이션에서는 

작업 스레드
멀티 스레드로 실행하는 애플리케이션 개발하려면 몇 개의 작업을 병렬로 실행할지 우선 결정 한 뒤 각 작업별로 스레드 생성해야 한다
작업 스레드 역시 객체러 생설되므로 클래스 필요
